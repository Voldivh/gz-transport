load(
    "//ign_bazel:build_defs.bzl",
    "IGNITION_FEATURES",
    "IGNITION_ROOT",
    "IGNITION_VISIBILITY",
    "cmake_configure_file",
    "ign_export_header",
)

package(
    default_visibility = IGNITION_VISIBILITY,
    features = IGNITION_FEATURES,
)

ign_export_header(
    name = "include/ignition/transport/log/Export.hh",
    export_base = "IGNITION_TRANSPORT_LOG",
    lib_name = "ignition-transport",
    visibility = ["//visibility:private"],
)

SCHEMA_INSTALL_PATH = "./ign_transport/log/sql"

# Generates build_config.hh based on the version numbers in CMake code.
cmake_configure_file(
    name = "build_config",
    src = "src/build_config.hh.in",
    out = "include/build_config.hh",
    cmakelists = ["src/CMakeLists.txt"],
    defines = [
        "SCHEMA_INSTALL_PATH=%s" % SCHEMA_INSTALL_PATH,
    ],
    visibility = ["//visibility:private"],
)

public_headers_no_gen = [
    "include/ignition/transport/log/Batch.hh",
    "include/ignition/transport/log/Descriptor.hh",
    "include/ignition/transport/log/detail/QueryOptions.hh",
    "include/ignition/transport/log/Log.hh",
    "include/ignition/transport/log/Message.hh",
    "include/ignition/transport/log/MsgIter.hh",
    "include/ignition/transport/log/Playback.hh",
    "include/ignition/transport/log/QualifiedTime.hh",
    "include/ignition/transport/log/QueryOptions.hh",
    "include/ignition/transport/log/Recorder.hh",
    "include/ignition/transport/log/SqlStatement.hh",
    "src/cmd/LogCommandAPI.hh",
    "src/Descriptor.hh",
]

private_headers = [
    "src/BatchPrivate.hh",
    "src/Console.hh",
    "src/MsgIterPrivate.hh",
    "src/raii-sqlite3.hh",
]

sources = [
    "src/Batch.cc",
    "src/Console.cc",
    "src/Descriptor.cc",
    "src/Log.cc",
    "src/Message.cc",
    "src/MsgIter.cc",
    "src/Playback.cc",
    "src/QualifiedTime.cc",
    "src/QueryOptions.cc",
    "src/raii-sqlite3.cc",
    "src/Recorder.cc",
    "src/SqlStatement.cc",
    "src/cmd/LogCommandAPI.cc",
]

test_sources = [
    "src/Batch_TEST.cc",
    "src/Descriptor_TEST.cc",
    "src/Message_TEST.cc",
    "src/LogCommandAPI_TEST.cc",
    "src/Log_TEST.cc",
    "src/Playback_TEST.cc",
    "src/QualifiedTime_TEST.cc",
    "src/QueryOptions_TEST.cc",
    "src/Recorder_TEST.cc",
    "src/SqlStatement_TEST.cc",
]

public_headers = public_headers_no_gen + [
    "include/ignition/transport/log/Export.hh",
    "include/build_config.hh",
]

cc_library(
    name = "log",
    srcs = sources + private_headers,
    hdrs = public_headers,
    includes = ["include"],
    deps = [
        IGNITION_ROOT + "ign_transport",
    ],
)

[cc_test(
    name = src.replace("/", "_").replace(".cc", "").replace("src_", ""),
    srcs = [src],
    data = [
        ":sql",
        ":test/data",
    ],
    deps = [
        ":log",
        "@gtest",
        "@gtest//:gtest_main",
    ],
) for src in test_sources]

exports_files(["sql"])

exports_files(["src/cmd/cmdlog.rb.in"])
